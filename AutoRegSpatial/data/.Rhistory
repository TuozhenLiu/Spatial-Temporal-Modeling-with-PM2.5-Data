cat(para_list[[m]][k], "&", paste(est_c,  collapse = " & "), "\\\\ \n")
}
cat("\\hline \n")
}
p_val_list[[k]]
p_val_list[[2]]
est_list = list()
p_val_list = list()
cov_types = c("exp", "quad")
lams = c(1,3)
for (k in 1:2)
{
est = matrix(0, nrow = 5, ncol = 4)
p_val = matrix(0, nrow = 5, ncol = 4)
cov.type = "quad"
lam = lams[k]
for (i in 1:4)
{
ind1 = gr_num[[i]]
Ymat = Ymat0[,ind1]
Time = ncol(Ymat)
### estimate rhos and mu
rhosMu = estRhoMu(Ymat)
# rhos_df = data.frame(citycode = gsub("PM2_5.", "", colnames(rhosMu)), rhos = rhosMu[2,])
# hist(rhosMu[2,], xlab = "Autoregressive Coefficients", col = "dodgerblue")
# dim(rhos_df)
# save(rhos_df, file = "rda/rhos_df.rda")
show(mean(rhosMu[2,]))
### for estimation theta_x
(thetaMu = estThetaMu(rhosMu[1,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
(thetaX = estThetaRho(rhosMu[2,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
### for estimation theta_e
(thetaE = lse.theta(Ymat, dist_loc2*lam, rhos = rhosMu[2,], mu = rhosMu[1,], infer = T, p.value = T, cov.type = cov.type))
est[,i] = c(thetaMu[[1]][1:2], thetaX[[1]][1:2], thetaE[[1]][1])
p_val[,i] = c(thetaMu[[4]][1:2], thetaX[[4]][1:2], thetaE[[4]][1])
}
est_list[[k]] = est
p_val_list[[k]] = p_val
}
###
para_list = list(c("$\\mu$", "$\\beta_u$", "$\\alpha$", "$\\beta_x$", "$\\beta_e$"),
c("$\\mu$", "$\\phi_u$", "$\\alpha$", "$\\phi_x$", "$\\phi_e$"))
for (m in 1:2)
{
est = est_list[[m]]
p_val = p_val_list[[m]]
for (k in 1:5)
{
est_c = specify_decimal(est[k,]*100, 2)
pv_c = specify_decimal(p_val[k,], 3)
pv_c = paste0("(", pv_c, ")")
pv_c[p_val[k,]<0.001] = "***"
cat(para_list[[m]][k], "&", paste(est_c,  collapse = " & "), "\\\\ \n")
}
cat("\\hline \n")
}
est_list = list()
p_val_list = list()
cov_types = c("exp", "quad")
lams = c(1,3.5)
for (k in 1:2)
{
est = matrix(0, nrow = 5, ncol = 4)
p_val = matrix(0, nrow = 5, ncol = 4)
cov.type = "quad"
lam = lams[k]
for (i in 1:4)
{
ind1 = gr_num[[i]]
Ymat = Ymat0[,ind1]
Time = ncol(Ymat)
### estimate rhos and mu
rhosMu = estRhoMu(Ymat)
# rhos_df = data.frame(citycode = gsub("PM2_5.", "", colnames(rhosMu)), rhos = rhosMu[2,])
# hist(rhosMu[2,], xlab = "Autoregressive Coefficients", col = "dodgerblue")
# dim(rhos_df)
# save(rhos_df, file = "rda/rhos_df.rda")
show(mean(rhosMu[2,]))
### for estimation theta_x
(thetaMu = estThetaMu(rhosMu[1,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
(thetaX = estThetaRho(rhosMu[2,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
### for estimation theta_e
(thetaE = lse.theta(Ymat, dist_loc2*lam, rhos = rhosMu[2,], mu = rhosMu[1,], infer = T, p.value = T, cov.type = cov.type))
est[,i] = c(thetaMu[[1]][1:2], thetaX[[1]][1:2], thetaE[[1]][1])
p_val[,i] = c(thetaMu[[4]][1:2], thetaX[[4]][1:2], thetaE[[4]][1])
}
est_list[[k]] = est
p_val_list[[k]] = p_val
}
###
para_list = list(c("$\\mu$", "$\\beta_u$", "$\\alpha$", "$\\beta_x$", "$\\beta_e$"),
c("$\\mu$", "$\\phi_u$", "$\\alpha$", "$\\phi_x$", "$\\phi_e$"))
for (m in 1:2)
{
est = est_list[[m]]
p_val = p_val_list[[m]]
for (k in 1:5)
{
est_c = specify_decimal(est[k,]*100, 2)
pv_c = specify_decimal(p_val[k,], 3)
pv_c = paste0("(", pv_c, ")")
pv_c[p_val[k,]<0.001] = "***"
cat(para_list[[m]][k], "&", paste(est_c,  collapse = " & "), "\\\\ \n")
}
cat("\\hline \n")
}
est_list = list()
p_val_list = list()
cov_types = c("exp", "quad")
lams = c(1,3.5)
for (k in 1:2)
{
est = matrix(0, nrow = 5, ncol = 4)
p_val = matrix(0, nrow = 5, ncol = 4)
cov.type = "quad"
lam = lams[k]
for (i in 1:4)
{
ind1 = gr_num[[i]]
Ymat = Ymat0[,ind1]
Time = ncol(Ymat)
### estimate rhos and mu
rhosMu = estRhoMu(Ymat)
# rhos_df = data.frame(citycode = gsub("PM2_5.", "", colnames(rhosMu)), rhos = rhosMu[2,])
# hist(rhosMu[2,], xlab = "Autoregressive Coefficients", col = "dodgerblue")
# dim(rhos_df)
# save(rhos_df, file = "rda/rhos_df.rda")
show(mean(rhosMu[2,]))
### for estimation theta_x
(thetaMu = estThetaMu(rhosMu[1,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
(thetaX = estThetaRho(rhosMu[2,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
### for estimation theta_e
(thetaE = lse.theta(Ymat, dist_loc2*lam, rhos = rhosMu[2,], mu = rhosMu[1,], infer = T, p.value = T, cov.type = cov.type))
est[,i] = c(thetaMu[[1]][1:2], thetaX[[1]][1:2], thetaE[[1]][1])
if (k==2)
est[c(2,4,5),i] = 1/est[c(2,4,5),i]
p_val[,i] = c(thetaMu[[4]][1:2], thetaX[[4]][1:2], thetaE[[4]][1])
}
est_list[[k]] = est
p_val_list[[k]] = p_val
}
###
para_list = list(c("$\\mu$", "$\\beta_u$", "$\\alpha$", "$\\beta_x$", "$\\beta_e$"),
c("$\\mu$", "$\\phi_u$", "$\\alpha$", "$\\phi_x$", "$\\phi_e$"))
for (m in 1:2)
{
est = est_list[[m]]
p_val = p_val_list[[m]]
for (k in 1:5)
{
est_c = specify_decimal(est[k,]*100, 2)
pv_c = specify_decimal(p_val[k,], 3)
pv_c = paste0("(", pv_c, ")")
pv_c[p_val[k,]<0.001] = "***"
cat(para_list[[m]][k], "&", paste(est_c,  collapse = " & "), "\\\\ \n")
}
cat("\\hline \n")
}
est_list = list()
p_val_list = list()
cov_types = c("exp", "quad")
lams = c(1,2)
for (k in 1:2)
{
est = matrix(0, nrow = 5, ncol = 4)
p_val = matrix(0, nrow = 5, ncol = 4)
cov.type = "quad"
lam = lams[k]
for (i in 1:4)
{
ind1 = gr_num[[i]]
Ymat = Ymat0[,ind1]
Time = ncol(Ymat)
### estimate rhos and mu
rhosMu = estRhoMu(Ymat)
# rhos_df = data.frame(citycode = gsub("PM2_5.", "", colnames(rhosMu)), rhos = rhosMu[2,])
# hist(rhosMu[2,], xlab = "Autoregressive Coefficients", col = "dodgerblue")
# dim(rhos_df)
# save(rhos_df, file = "rda/rhos_df.rda")
show(mean(rhosMu[2,]))
### for estimation theta_x
(thetaMu = estThetaMu(rhosMu[1,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
(thetaX = estThetaRho(rhosMu[2,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
### for estimation theta_e
(thetaE = lse.theta(Ymat, dist_loc2*lam, rhos = rhosMu[2,], mu = rhosMu[1,], infer = T, p.value = T, cov.type = cov.type))
est[,i] = c(thetaMu[[1]][1:2], thetaX[[1]][1:2], thetaE[[1]][1])
if (k==2)
est[c(2,4,5),i] = 1/est[c(2,4,5),i]
p_val[,i] = c(thetaMu[[4]][1:2], thetaX[[4]][1:2], thetaE[[4]][1])
}
est_list[[k]] = est
p_val_list[[k]] = p_val
}
###
para_list = list(c("$\\mu$", "$\\beta_u$", "$\\alpha$", "$\\beta_x$", "$\\beta_e$"),
c("$\\mu$", "$\\phi_u$", "$\\alpha$", "$\\phi_x$", "$\\phi_e$"))
for (m in 1:2)
{
est = est_list[[m]]
p_val = p_val_list[[m]]
for (k in 1:5)
{
est_c = specify_decimal(est[k,], 2)
pv_c = specify_decimal(p_val[k,], 3)
pv_c = paste0("(", pv_c, ")")
pv_c[p_val[k,]<0.001] = "***"
cat(para_list[[m]][k], "&", paste(est_c,  collapse = " & "), "\\\\ \n")
}
cat("\\hline \n")
}
## model fitting
est_list = list()
p_val_list = list()
cov_types = c("exp", "quad")
lams = c(1,4)
for (k in 1:2)
{
est = matrix(0, nrow = 5, ncol = 4)
p_val = matrix(0, nrow = 5, ncol = 4)
cov.type = "quad"
lam = lams[k]
for (i in 1:4)
{
ind1 = gr_num[[i]]
Ymat = Ymat0[,ind1]
Time = ncol(Ymat)
### estimate rhos and mu
rhosMu = estRhoMu(Ymat)
# rhos_df = data.frame(citycode = gsub("PM2_5.", "", colnames(rhosMu)), rhos = rhosMu[2,])
# hist(rhosMu[2,], xlab = "Autoregressive Coefficients", col = "dodgerblue")
# dim(rhos_df)
# save(rhos_df, file = "rda/rhos_df.rda")
show(mean(rhosMu[2,]))
### for estimation theta_x
(thetaMu = estThetaMu(rhosMu[1,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
(thetaX = estThetaRho(rhosMu[2,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
### for estimation theta_e
(thetaE = lse.theta(Ymat, dist_loc2*lam, rhos = rhosMu[2,], mu = rhosMu[1,], infer = T, p.value = T, cov.type = cov.type))
est[,i] = c(thetaMu[[1]][1:2], thetaX[[1]][1:2], thetaE[[1]][1])
#     if (k==2)
#       est[c(2,4,5),i] = 1/est[c(2,4,5),i]
p_val[,i] = c(thetaMu[[4]][1:2], thetaX[[4]][1:2], thetaE[[4]][1])
}
est_list[[k]] = est
p_val_list[[k]] = p_val
}
###
para_list = list(c("$\\mu$", "$\\beta_u$", "$\\alpha$", "$\\beta_x$", "$\\beta_e$"),
c("$\\mu$", "$\\phi_u$", "$\\alpha$", "$\\phi_x$", "$\\phi_e$"))
for (m in 1:2)
{
est = est_list[[m]]
p_val = p_val_list[[m]]
for (k in 1:5)
{
est_c = specify_decimal(est[k,], 2)
pv_c = specify_decimal(p_val[k,], 3)
pv_c = paste0("(", pv_c, ")")
pv_c[p_val[k,]<0.001] = "***"
cat(para_list[[m]][k], "&", paste(est_c,  collapse = " & "), "\\\\ \n")
}
cat("\\hline \n")
}
##
para_list = list(c("$\\mu$", "$\\beta_u$", "$\\alpha$", "$\\beta_x$", "$\\beta_e$"),
c("$\\mu$", "$\\phi_u$", "$\\alpha$", "$\\phi_x$", "$\\phi_e$"))
for (m in 1:2)
{
est = est_list[[m]]
p_val = p_val_list[[m]]
for (k in 1:5)
{
est_c = specify_decimal(est[k,], 3)
pv_c = specify_decimal(p_val[k,], 3)
pv_c = paste0("(", pv_c, ")")
pv_c[p_val[k,]<0.001] = "***"
cat(para_list[[m]][k], "&", paste(est_c,  collapse = " & "), "\\\\ \n")
}
cat("\\hline \n")
}
est_list = list()
p_val_list = list()
cov_types = c("exp", "quad")
lams = c(1,4)
for (k in 1:2)
{
est = matrix(0, nrow = 5, ncol = 4)
p_val = matrix(0, nrow = 5, ncol = 4)
cov.type = "quad"
lam = lams[k]
for (i in 1:4)
{
ind1 = gr_num[[i]]
Ymat = Ymat0[,ind1]
Time = ncol(Ymat)
### estimate rhos and mu
rhosMu = estRhoMu(Ymat)
# rhos_df = data.frame(citycode = gsub("PM2_5.", "", colnames(rhosMu)), rhos = rhosMu[2,])
# hist(rhosMu[2,], xlab = "Autoregressive Coefficients", col = "dodgerblue")
# dim(rhos_df)
# save(rhos_df, file = "rda/rhos_df.rda")
show(mean(rhosMu[2,]))
### for estimation theta_x
(thetaMu = estThetaMu(rhosMu[1,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
(thetaX = estThetaRho(rhosMu[2,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
### for estimation theta_e
(thetaE = lse.theta(Ymat, dist_loc2*lam, rhos = rhosMu[2,], mu = rhosMu[1,], infer = T, p.value = T, cov.type = cov.type))
est[,i] = c(thetaMu[[1]][1:2], thetaX[[1]][1:2], thetaE[[1]][1])
if (k==2)
est[c(2,4,5),i] = est[c(2,4,5),i]*100
p_val[,i] = c(thetaMu[[4]][1:2], thetaX[[4]][1:2], thetaE[[4]][1])
}
est_list[[k]] = est
p_val_list[[k]] = p_val
}
###
para_list = list(c("$\\mu$", "$\\beta_u$", "$\\alpha$", "$\\beta_x$", "$\\beta_e$"),
c("$\\mu$", "$\\phi_u$", "$\\alpha$", "$\\phi_x$", "$\\phi_e$"))
for (m in 1:2)
{
est = est_list[[m]]
p_val = p_val_list[[m]]
for (k in 1:5)
{
est_c = specify_decimal(est[k,], 2)
pv_c = specify_decimal(p_val[k,], 3)
pv_c = paste0("(", pv_c, ")")
pv_c[p_val[k,]<0.001] = "***"
cat(para_list[[m]][k], "&", paste(est_c,  collapse = " & "), "\\\\ \n")
}
cat("\\hline \n")
}
est_list = list()
p_val_list = list()
cov_types = c("exp", "quad")
lams = c(1,4)
for (k in 1:2)
{
est = matrix(0, nrow = 5, ncol = 4)
p_val = matrix(0, nrow = 5, ncol = 4)
cov.type = "quad"
lam = lams[k]
for (i in 1:4)
{
ind1 = gr_num[[i]]
Ymat = Ymat0[,ind1]
Time = ncol(Ymat)
### estimate rhos and mu
rhosMu = estRhoMu(Ymat)
# rhos_df = data.frame(citycode = gsub("PM2_5.", "", colnames(rhosMu)), rhos = rhosMu[2,])
# hist(rhosMu[2,], xlab = "Autoregressive Coefficients", col = "dodgerblue")
# dim(rhos_df)
# save(rhos_df, file = "rda/rhos_df.rda")
show(mean(rhosMu[2,]))
### for estimation theta_x
(thetaMu = estThetaMu(rhosMu[1,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
(thetaX = estThetaRho(rhosMu[2,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
### for estimation theta_e
(thetaE = lse.theta(Ymat, dist_loc2*lam, rhos = rhosMu[2,], mu = rhosMu[1,], infer = T, p.value = T, cov.type = cov.type))
est[,i] = c(thetaMu[[1]][1:2], thetaX[[1]][1:2], thetaE[[1]][1])
if (k==2)
est[c(2,4,5),i] = est[c(2,4,5),i]*1000
p_val[,i] = c(thetaMu[[4]][1:2], thetaX[[4]][1:2], thetaE[[4]][1])
}
est_list[[k]] = est
p_val_list[[k]] = p_val
}
###
para_list = list(c("$\\mu$", "$\\beta_u$", "$\\alpha$", "$\\beta_x$", "$\\beta_e$"),
c("$\\mu$", "$\\phi_u$", "$\\alpha$", "$\\phi_x$", "$\\phi_e$"))
for (m in 1:2)
{
est = est_list[[m]]
p_val = p_val_list[[m]]
for (k in 1:5)
{
est_c = specify_decimal(est[k,], 2)
pv_c = specify_decimal(p_val[k,], 3)
pv_c = paste0("(", pv_c, ")")
pv_c[p_val[k,]<0.001] = "***"
cat(para_list[[m]][k], "&", paste(est_c,  collapse = " & "), "\\\\ \n")
}
cat("\\hline \n")
}
exp(1.58/(1+1.58))
exp(1.58)/(1+exp(1.58))
exp(1.26)/(1+exp(1.26))
1.67/1-0.78
1.67/(1-0.78)
1.35/(1-0.78)
mean(Ymat)
hist(rhos)
hist(hosMu[2,])
hist(rhosMu[2,])
hist(log((1+rhosMu[2,])/(1-rhosMu[2,])))
mean(rhosMu[2,])
mean(rhosMu[1,])
1.35/(1-0.64)
1.35/(1-0.77)
mean(log((1+rhosMu[2,])/(1-rhosMu[2,])))
exp(1.58)/(1+exp(1.58))
plot(dd, colMeans(Ymat), type = "l", xlab = "Day", ylab = "Average Response",
lwd = 1.5, cex.axis = 1.5, cex = 1.5, cex.lab = 1.5)
plot(dd, colMeans(Ymat0), type = "l", xlab = "Day", ylab = "Average Response",
lwd = 1.5, cex.axis = 1.5, cex = 1.5, cex.lab = 1.5)
plot(dd, apply(Ymat0,2, median), type = "l", xlab = "Day", ylab = "Average Response",
lwd = 1.5, cex.axis = 1.5, cex = 1.5, cex.lab = 1.5)
est_list = list()
p_val_list = list()
cov_types = c("exp", "quad")
lams = c(1,4)
for (k in 1:2)
{
est = matrix(0, nrow = 5, ncol = 4)
p_val = matrix(0, nrow = 5, ncol = 4)
cov.type = "quad"
lam = lams[k]
for (i in 1:4)
{
ind1 = gr_num[[i]]
Ymat = Ymat0[,ind1]
Time = ncol(Ymat)
### estimate rhos and mu
rhosMu = estRhoMu(Ymat)
# rhos_df = data.frame(citycode = gsub("PM2_5.", "", colnames(rhosMu)), rhos = rhosMu[2,])
# hist(rhosMu[2,], xlab = "Autoregressive Coefficients", col = "dodgerblue")
# dim(rhos_df)
# save(rhos_df, file = "rda/rhos_df.rda")
show(mean(rhosMu[1,])/mean(rhosMu[2,]))
### for estimation theta_x
(thetaMu = estThetaMu(rhosMu[1,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
(thetaX = estThetaRho(rhosMu[2,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
### for estimation theta_e
(thetaE = lse.theta(Ymat, dist_loc2*lam, rhos = rhosMu[2,], mu = rhosMu[1,], infer = T, p.value = T, cov.type = cov.type))
est[,i] = c(thetaMu[[1]][1:2], thetaX[[1]][1:2], thetaE[[1]][1])
if (k==2)
est[c(2,4,5),i] = est[c(2,4,5),i]*1000
p_val[,i] = c(thetaMu[[4]][1:2], thetaX[[4]][1:2], thetaE[[4]][1])
}
est_list[[k]] = est
p_val_list[[k]] = p_val
}
est_list = list()
p_val_list = list()
cov_types = c("exp", "quad")
lams = c(1,4)
for (k in 1:2)
{
est = matrix(0, nrow = 5, ncol = 4)
p_val = matrix(0, nrow = 5, ncol = 4)
cov.type = "quad"
lam = lams[k]
for (i in 1:4)
{
ind1 = gr_num[[i]]
Ymat = Ymat0[,ind1]
Time = ncol(Ymat)
### estimate rhos and mu
rhosMu = estRhoMu(Ymat)
# rhos_df = data.frame(citycode = gsub("PM2_5.", "", colnames(rhosMu)), rhos = rhosMu[2,])
# hist(rhosMu[2,], xlab = "Autoregressive Coefficients", col = "dodgerblue")
# dim(rhos_df)
# save(rhos_df, file = "rda/rhos_df.rda")
show(mean(rhosMu[1,]/rhosMu[2,]))
### for estimation theta_x
(thetaMu = estThetaMu(rhosMu[1,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
(thetaX = estThetaRho(rhosMu[2,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
### for estimation theta_e
(thetaE = lse.theta(Ymat, dist_loc2*lam, rhos = rhosMu[2,], mu = rhosMu[1,], infer = T, p.value = T, cov.type = cov.type))
est[,i] = c(thetaMu[[1]][1:2], thetaX[[1]][1:2], thetaE[[1]][1])
if (k==2)
est[c(2,4,5),i] = est[c(2,4,5),i]*1000
p_val[,i] = c(thetaMu[[4]][1:2], thetaX[[4]][1:2], thetaE[[4]][1])
}
est_list[[k]] = est
p_val_list[[k]] = p_val
}
est_list = list()
p_val_list = list()
cov_types = c("exp", "quad")
lams = c(1,4)
for (k in 1:2)
{
est = matrix(0, nrow = 5, ncol = 4)
p_val = matrix(0, nrow = 5, ncol = 4)
cov.type = "quad"
lam = lams[k]
for (i in 1:4)
{
ind1 = gr_num[[i]]
Ymat = Ymat0[,ind1]
Time = ncol(Ymat)
### estimate rhos and mu
rhosMu = estRhoMu(Ymat)
# rhos_df = data.frame(citycode = gsub("PM2_5.", "", colnames(rhosMu)), rhos = rhosMu[2,])
# hist(rhosMu[2,], xlab = "Autoregressive Coefficients", col = "dodgerblue")
# dim(rhos_df)
# save(rhos_df, file = "rda/rhos_df.rda")
show(mean(rhosMu[1,])/(1-mean(rhosMu[2,])))
### for estimation theta_x
(thetaMu = estThetaMu(rhosMu[1,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
(thetaX = estThetaRho(rhosMu[2,], dist_loc2*lam, infer = T, p.value = T, cov.type = cov.type))
### for estimation theta_e
(thetaE = lse.theta(Ymat, dist_loc2*lam, rhos = rhosMu[2,], mu = rhosMu[1,], infer = T, p.value = T, cov.type = cov.type))
est[,i] = c(thetaMu[[1]][1:2], thetaX[[1]][1:2], thetaE[[1]][1])
if (k==2)
est[c(2,4,5),i] = est[c(2,4,5),i]*1000
p_val[,i] = c(thetaMu[[4]][1:2], thetaX[[4]][1:2], thetaE[[4]][1])
}
est_list[[k]] = est
p_val_list[[k]] = p_val
}
